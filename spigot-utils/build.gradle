import com.github.jk1.license.render.InventoryMarkdownReportRenderer

plugins {
    id 'maven-publish'
    id 'java-library'
    id "com.github.johnrengelman.shadow" version "7.0.0"
    id 'com.github.jk1.dependency-license-report' version '1.16'
}

group = "com.github.md5sha256"
version = "0.1.0"
description = "SpigotUtils"

test {
    useJUnitPlatform()
}

tasks.withType(JavaCompile) {
    Provider<JavaCompiler> compiler = javaToolchains.compilerFor {
        JavaLanguageVersion.of(8)
    }
    if (compiler.present && compiler.get().metadata.languageVersion.asInt() > 9) {
        // Mark release as 8 if the compiler is Java 9 or newer
        options.release.set(8)
    } else {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }
    options.encoding = "UTF-8"
    options.fork = true
    options.compilerArgs += ["-parameters"]
}

licenseReport {
    renderer(new InventoryMarkdownReportRenderer("THIRD-PARTY.MD"))
    excludeOwnGroup = true
}

task sourcesJar(type: Jar) {
    archiveClassifier.set("sources")
    from(sourceSets.main.allJava)
}

publishing {
    publications{
        maven(MavenPublication) {
            artifacts {
                sourcesJar
            }
            pom {
                name = 'spigot-utils'
                packaging = 'jar'
                url = 'https://github.com/md5sha256/SpigotUtils'
            }
        }
    }
}

publishToMavenLocal {
    dependsOn(jar)
    dependsOn(sourcesJar)
}

assemble {
    dependsOn(shadowJar)
}

shadowJar {
}

repositories {
    mavenCentral()
    maven {
        name = "sonatype-releases"
        url = "https://oss.sonatype.org/content/groups/public/"
        mavenContent {
            releasesOnly()
        }
    }

    maven {
        name = "sonatype-snapshots"
        url = "https://oss.sonatype.org/content/repositories/snapshots/"
        mavenContent {
            snapshotsOnly()
        }
    }

    maven {
        name = "spigot repo"
        url = "https://hub.spigotmc.org/nexus/content/repositories/snapshots/"
    }

    maven {
        name = "paper repo"
        url = "https://papermc.io/repo/repository/maven-public/"
    }

    maven {
        name = "jitpack"
        url = "https://jitpack.io"
    }

    maven {
        name = "aikar"
        url = "https://repo.aikar.co/content/groups/aikar/"
    }
}

dependencies {

    api("com.google.inject:guice:5.0.1") {
        exclude(group: "com.google.guava", module: "guava")
    }
    api("com.google.inject.extensions:guice-assistedinject:5.0.1") {
        exclude(group: "com.google.guava", module: "guava")
    }
    api("co.aikar:acf-paper:0.5.0-SNAPSHOT")
    api("net.kyori:adventure-text-minimessage:4.1.0-SNAPSHOT") {
        exclude(group: "net.kyori", module: "adventure-api")
    }
    api("net.kyori:adventure-text-serializer-plain:4.7.0") {
        exclude(group: "net.kyori", module: "adventure-api")
    }
    api("io.papermc:paperlib:1.0.6")

    compileOnlyApi("com.destroystokyo.paper:paper-api:1.16.5-R0.1-SNAPSHOT") {
        testImplementation("net.kyori:adventure-text-serializer-legacy:4.7.0")
    }
    compileOnlyApi("org.jetbrains:annotations:20.1.0")

    // Test dependencies
    testImplementation("com.github.seeseemelk:MockBukkit-v1.16:0.25.0")
    testImplementation("org.junit.jupiter:junit-jupiter-api:5.7.1")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.7.1")

}
